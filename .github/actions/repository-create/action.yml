name: Create Repository
description: Create a new repository

inputs:
  repo-name:
    description: Repository Name
    required: true
    type: string
  visibility:
    description: Repository Visibility
    required: true
    type: string
  token:
    description: Token used for GitHub API calls
    required: true

outputs:
  repo-url:
    description: The URL of the created repository
    value: ${{ steps.create-repo.outputs.repo_url }}

runs:
  using: "composite"
  steps:
    - name: Get GitHub Host Name
      id: get-host
      shell: bash
      env:
        CONFIG_FILE: config/general.yml
      run: |
        host=$(yq e '.host' $CONFIG_FILE)
        if [ -z "$host" ]; then
          host="github.com"
        fi
        echo "host=$host" >> "$GITHUB_OUTPUT"
    - name: Create Repository with Configuration
      shell: bash
      id: create-repo
      env:
        CONFIG_FILE: config/repositories.yml
        GH_TOKEN: ${{ inputs.token }}
        HOST: ${{ steps.get-host.outputs.host }}
        REPO_OWNER: ${{ github.repository_owner }}
        REPO_NAME: ${{ inputs.repo-name }}
        REPO_VISIBILITY: ${{ inputs.visibility }}
      run: |
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          --hostname $HOST \
          /orgs/$REPO_OWNER/repos \
          -f name=$REPO_NAME \
          -F visibility=$REPO_VISIBILITY \
          -F has_issues=$(yq e '.repository.has_issues' $CONFIG_FILE) \
          -F has_projects=$(yq e '.repository.has_projects' $CONFIG_FILE) \
          -F has_wiki=$(yq e '.repository.has_wiki' $CONFIG_FILE) \
          -F has_downloads=$(yq e '.repository.has_downloads' $CONFIG_FILE) > repo-response.json
        echo "repo_url=$(yq e '.html_url' repo-response.json)" >> "$GITHUB_OUTPUT"


